/* Plugin generated by AMXX-Studio */

#include <amxmodx>
#include <amxmisc>
#include <ns>
#include <fakemeta>

#include <engine>

#define PLUGIN "Hive-CC Protect"
#define VERSION "1.0"
#define AUTHOR "Masked Carrot"

#define USE_RELATIVE_TIME		1	/*If set to '0' PROTECTION_TIME is from begining of round.
						 *If set to '1' PROTECTION_TIME is the amount of time
						 *before the end of the round(CVAR mp_combattime)to remove protection.
						 */
						 
#define PROTECTION_TIME 		2.0	// Time (in minutes) to protect.(decimel point is important)
#define PROTECTION_GLOW			1	// Should hive/cc glow while protected. 0 - off, 1 - on
#define DEFAULT_PROTECTION		"hive"	// Values off, hive, cc, or both

/*Red, Green, Blue Color components for protection glow color.*/
#define HIVE_RED		0
#define HIVE_GREEN		255
#define HIVE_BLUE		0

#define CC_RED		0
#define CC_GREEN	0
#define CC_BLUE		255		
new  Float:g_protectiontime 	= 0.0
new g_protection[5] 		= {DEFAULT_PROTECTION}	

new g_hive_original_takedamage
new g_cc_original_takedamage
new g_lockcommand =0


public plugin_init() {
	if (ns_is_combat())
	{
	register_plugin(PLUGIN, VERSION, AUTHOR)
	register_concmd("amx_set_protection", "cmd_set_protection",ADMIN_KICK,"off, hive, cc, both")
	register_event("Countdown", "initprotection", "ab")
	register_event("GameStatus","endprotection","ab","1=2")//end if round ends
	}
	else	//If not combat mode, do nothing.
		register_plugin(PLUGIN, VERSION, AUTHOR)
	return PLUGIN_HANDLED
}

public initprotection()
{
	g_lockcommand = 0	//unlock admin ability to manually activate protection.
	new hive = find_ent_by_class(1, "team_hive")
	new cc = find_ent_by_class(1, "team_command")
	g_hive_original_takedamage = pev(hive,pev_takedamage,0.0)
	g_cc_original_takedamage = pev(cc,pev_takedamage,0.0)
	
	//Reset to default values after map changes or round restarts.
	//copy(g_protection,sizeof(DEFAULT_PROTECTION),DEFAULT_PROTECTION)
	g_protection  		= DEFAULT_PROTECTION
	
#if USE_RELATIVE_TIME
	g_protectiontime = float(get_cvar_num("mp_combattime"))-PROTECTION_TIME
	if (g_protectiontime<1.0)g_protectiontime=1.0
#else
	g_protectiontime = PROTECTION_TIME
#endif
	new params [1] = {1}
	
	beginprotection()
	set_task((g_protectiontime*60.0), "task_end_protection",110,params,1)
	//return PLUGIN_HANDLED
}

public task_end_protection(params[])
{
	/*Stop the Admin ability to re-activate protection for the duration of the round.*/
	/*This prevents the possibility of an Admin reactivating the protection and then
	 *leaving the game.Since this only gets called once per round protection would
	 *never get turned off until everyone left the game, or went back to the readyroom.
	 */
	 
	g_lockcommand=1	
	endprotection(params)
}
public beginprotection()
{
	new speak[1]={0}
	endprotection(speak)	//Make sure all is off in so we only turn on what we want.
	
	if (equali(g_protection,"off"))	//This should never happen
	{
		return
	}
	else if(equali(g_protection,"hive"))
	{
		new hive = find_ent_by_class(1, "team_hive")
		set_pev(hive,pev_takedamage,0.0)
		client_cmd(0,"spk ^"alien shield has been activated^"")
#if PROTECTION_GLOW
		set_rendering(hive, kRenderFxGlowShell, 
				HIVE_RED, 
				HIVE_GREEN, 
				HIVE_BLUE, 
				kRenderNormal, 16)
#endif
		return
	}
	else if(equali(g_protection,"cc"))
	{
		new cc = find_ent_by_class(1, "team_command")
		set_pev(cc,pev_takedamage,0.0)
		client_cmd(0,"spk ^"command shield has been activated^"")
#if PROTECTION_GLOW
		set_rendering(cc, kRenderFxGlowShell, 
				CC_RED, 
				CC_GREEN, 
				CC_BLUE, 
				kRenderNormal, 16)
#endif
		return
	}
	else if(equali(g_protection,"both"))
	{
		new hive = find_ent_by_class(1, "team_hive")
		set_pev(hive,pev_takedamage,0.0)
		
		new cc = find_ent_by_class(1, "team_command")
		set_pev(cc,pev_takedamage,0.0)
		
		client_cmd(0,"spk ^"alien and command shield has been activated^"")
		
#if PROTECTION_GLOW
		set_rendering(hive, kRenderFxGlowShell,
				HIVE_RED, 
				HIVE_GREEN, 
				HIVE_BLUE, 
				kRenderNormal, 16)
				
		set_rendering(cc, kRenderFxGlowShell, 
				CC_RED, 
				CC_GREEN, 
				CC_BLUE, 
				kRenderNormal, 16)
#endif
		return
	}
}

public endprotection(speak[])
{
	new hive = find_ent_by_class(1, "team_hive")
	new cc   = find_ent_by_class(1, "team_command")
	
	
	if(speak[0])
	{
		if(equal(g_protection,"hive"))
			client_cmd(0,"spk ^"alien shield has been deactivated^"")
		else if(equal(g_protection,"cc"))
			client_cmd(0,"spk ^"command shield has been deactivated^"")
		else if(equal(g_protection,"both"))
			client_cmd(0,"spk ^"all shield have been deactivated^"")
	}
	/*restore original take damage values*/
	set_pev(hive,pev_takedamage,g_hive_original_takedamage) //2.0
	set_pev(cc,pev_takedamage,g_cc_original_takedamage)
	
	/*Turn off glow*/
	set_rendering(hive)
	set_rendering(cc)
}

public cmd_set_protection(id,level,cid)
{
	if (!cmd_access(id, level, cid, 2))
	{
		return PLUGIN_HANDLED
	}
	
	new input[10]
	read_argv(1,input,9)	
	
	if (equali(input,"off"))
	{
		new speak[1]={1}
		g_protection = "off"
		endprotection(speak)
		console_print(id,"Hive and CC protection is now off.")
	}
	else if(g_lockcommand)
	{
		new msg[]="Activation disabled for duration of round."
		console_print(id,msg)
	}
	else if (equali(input,"hive"))
	{
		g_protection = "hive"
		console_print(id,"Hive only protection is now activated.")
		beginprotection()
	}
	else if (equali(input,"cc"))
	{
		g_protection = "cc"
		console_print(id,"CC only protection is now activated.")
		beginprotection()
	}
	else if (equali(input,"both"))
	{
		g_protection = "both"
		console_print(id,"Both Hive and CC protection is now activated.")
		beginprotection()
	}
	else if (equali(input,"status"))
	{
		new msg[56]="Protection is currently set to "
		strcat(msg,g_protection,55)
		//format(msg,30,"amx_protection is %s",g_protection)
		console_print(id,msg)
		if (!equali(g_protection,"off"))
		{
			msg=""
			format(msg,55,"Protection will shut off %f minutes into round.",g_protectiontime) 
			console_print(id,msg)
		}
	}
	return PLUGIN_HANDLED
}
